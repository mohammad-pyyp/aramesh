# Generated by Django 5.2.5 on 2025-09-20 13:39

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(error_messages={'blank': 'لطفاً نام را وارد کنید.', 'invalid_name': 'نام فقط باید شامل حروف فارسی باشد.', 'max_length': 'نام نمی\u200cتواند بیشتر از ۲۵۰ کاراکتر باشد.'}, help_text='حداکثر ۲۵۰ کاراکتر. فقط حروف فارسی مجاز است.', max_length=250, validators=[django.core.validators.RegexValidator(code='invalid_name', message='این فیلد فقط می\u200cتواند شامل حروف فارسی یا عربی باشد.', regex='^[آ-یءئ\\s\u200cيك]+$')], verbose_name='نام')),
                ('last_name', models.CharField(error_messages={'blank': 'لطفاً نام خانوادگی را وارد کنید.', 'invalid_name': 'نام خانوادگی فقط باید شامل حروف فارسی باشد.', 'max_length': 'نام خانوادگی نمی\u200cتواند بیشتر از ۲۵۰ کاراکتر باشد.'}, help_text='حداکثر ۲۵۰ کاراکتر. فقط حروف فارسی مجاز است.', max_length=250, validators=[django.core.validators.RegexValidator(code='invalid_name', message='این فیلد فقط می\u200cتواند شامل حروف فارسی یا عربی باشد.', regex='^[آ-یءئ\\s\u200cيك]+$')], verbose_name='نام خانوادگی')),
                ('phone', models.CharField(error_messages={'unique': 'این شماره تلفن قبلاً استفاده شده است.'}, max_length=11, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_phone_number', message='شماره تلفن باید با 09 شروع شده و 11 رقم باشد.', regex='^09\\d{9}$')], verbose_name='شماره تلفن')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'کاربر',
                'verbose_name_plural': 'کاربران',
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'در حال بررسی'), ('approved', 'تایید شد'), ('canceled', 'لغو شد')], default='pending', max_length=20)),
                ('slot', models.CharField(choices=[('8_00', '08:00'), ('8_30', '08:30'), ('9_00', '09:00'), ('9_30', '09:30'), ('10_00', '10:00'), ('10_30', '10:30')], max_length=5)),
                ('date', models.DateField(blank=True, null=True)),
                ('cancellation_reason', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
